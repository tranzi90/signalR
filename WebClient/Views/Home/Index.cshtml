@{
    ViewData["Title"] = "Home Page";
}

<section class="chat">
    <div class="form-wrapper">
        <div class="wrapper message-wrapper">
            <label for="wrapper message">Text</label>
            <textarea id="message"></textarea>
            <button type="button" onclick="sendMessage()">Send</button>
        </div>
    </div>
    <div class="messages-wrapper">
        <div id="messages-content">

        </div>
    </div>

</section>

@section Styles
{
    <style>
        p {
            margin-bottom: 0
        }

        .chat {
            display: flex;
            justify-content: space-between
        }

        .form-wrapper {
            width: 30%
        }

            .form-wrapper .wrapper {
                display: flex;
                align-items: center;
                margin-bottom: 15px;
                justify-content: space-between;
            }

        .login-wrapper, .message-wrapper {
            flex-wrap: wrap;
        }

        .btn-wrapper {
            width: 100%;
            padding-top: 15px;
        }

            .btn-wrapper button {
                float: right;
                width: 30%;
                justify-content: flex-end
            }

                .btn-wrapper button:last-child {
                    margin-right: 10px
                }

        .message-wrapper {
            align-items: flex-start;
        }

            .message-wrapper label {
                margin-right: 15px;
                width: 10%;
            }

            .message-wrapper textarea {
                width: 80%;
            }

            .message-wrapper button {
                margin-left: auto;
                margin-top: 15px;
            }

        .messages-wrapper {
            width: 65%;
            display: block;
        }

            .messages-wrapper #messages-content {
                border: 1px solid #000;
                min-height: 500px;
            }
    </style>
}

@section Scripts
{
    <script type="text/javascript">
        const socket = new WebSocket('ws://localhost:57785/messages');

        socket.addEventListener('message', function (event) {
            console.log('Message from server ', event.data);
            let message = JSON.parse(event.data);
            if (message.Command === 'Send')
                appendMessage('Anonymous', JSON.parse(message.Body).Text, 'black');
        });

        socket.addEventListener('open', function (event) {
            console.log('Connected to server');
        });

        function appendMessage(sender, message, color) {
            document.querySelector('#messages-content').insertAdjacentHTML("beforeend", `<div style="color:${color}"><p>Sender: ${sender}</p><p>Text: ${message}</p></div><br>`);
        }

        async function sendMessage() {
            if (socket.readyState === 1) {
                let textArea = document.querySelector('#message');
                let message = { Text: textArea.value };
                let myWebSocketMessage = {
                    Command: 'SendToOthers',
                    Body: JSON.stringify(message)
                };
                try {
                    await socket.send(JSON.stringify(myWebSocketMessage));
                    appendMessage('Me', message.Text, 'green');
                }
                catch (error) {
                    console.log(error);
                }
                document.querySelector('#message').value = '';
            }
        }
    </script>
}